<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace 写接口全路径-->
<mapper namespace="com.atguigu.gmall.manage.mapper.BaseAttrInfoMapper">
    <!--返回映射的结果集
        id:表示唯一
        type:返回数据类型
        autoMapping:自动映射数据库字段与实体类的属性名
    -->
    <resultMap id="baseAttrInfoMap" type="com.atguigu.gmall.bean.BaseAttrInfo" autoMapping="true">
        <!--id 表示主键
            property：表示实体类的属性
            column：表示通过数据库执行的sql 语句以后，显示的字段名称
        -->
        <id property="id" column="id"></id>
        <!--表示普通字段-->
        <!--<result></result>-->
        <!--mybatis 如何配置1：n
            property:属性名
            ofType:集合返回的数据类型
        -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.bean.BaseAttrValue" autoMapping="true">
            <!--如果字段名重复，则需求七个别名-->
            <id property="id" column="attr_value_id"></id>
        </collection>
        <!--多对一-->
        <!-- <association property=""></association>-->
    </resultMap>
    <!--id：方法名称
        mybatis #{0} #{1}
    -->
    <select id="selectBaseAttrInfoListByCatalog3Id" resultMap="baseAttrInfoMap">
        SELECT
           bai.id,
           bai.attr_name,
           bai.catalog3_id,
           bav.id attr_value_id,
           bav.value_name,
           bav.attr_id
        FROM
           base_attr_info bai
        INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
        WHERE
           catalog3_id = #{0}
    </select>

    <select id="selectAttrInfoListByIds" resultMap="baseAttrInfoMap">
        SELECT ai.id,ai.attr_name,ai.catalog3_id, av.id attr_value_id ,av.attr_id ,av.value_name
            FROM base_attr_info ai INNER JOIN base_attr_value av ON ai.id=av.attr_id
            WHERE av.id IN (${valueIds})
    </select>
</mapper>
